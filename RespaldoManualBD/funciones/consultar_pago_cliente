-- Function: public.consultar_pago_cliente(integer)

-- DROP FUNCTION public.consultar_pago_cliente(integer);

CREATE OR REPLACE FUNCTION public.consultar_pago_cliente(integer)
  RETURNS text AS
$BODY$
DECLARE
    fila RECORD;
    cadena text;  
    separador text;
    pp_id_cliente int;
   
Begin
    cadena := '';   
    separador:='';
    pp_id_cliente:= $1;
   
    for fila in 
	select 	cp.id_cliente ||'~'||
		cs.condicion_cliente ||'~'||
		cs.nombres_cliente ||'~'||
		cs.ci_cliente ||'~'||
		cs.telefono_principal ||'~'||
		cs.telefono_alterno ||'~'||
		cs.correo ||'~'||
		cs.direccion ||'~'||
		cp.fecha_pago ||'~'||
		cp.hora_pago ||'~'||
		cp.factura_no ||'~'||
		cp.monto_pagado ||'~'||
		cp.diferencia_monto ||'~'||
		cp.detalle_pago ||'~'||
		sc.nombre_servicio ||'~'||
		sc.contenido_servicio ||'~'||
		cs.costos_instalacion ||'~'||
		us.nombre ||'~'||
		us.apellido ||'~'||
		fp.nombre_pago ||'~'||
		cs.nombre_comercio ||'~'||
		cs.otro_correo ||'~'||
		cs.costoservicio as datos
	from 
		control_pagos cp,
		clientes cs,
		servicios sc,
		usuarios us,
		forma_pago fp
	where 
		
		cp.id_cliente=pp_id_cliente and
		cs.idservicio=sc.id_servicio and
		cp.usuario=us.cedula and
		cp.id_forma_pago=fp.id_formapago
		
	    
    loop
        cadena := cadena||separador||fila.datos;
         separador:='|';
    end loop;


    return cadena;
end;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.consultar_pago_cliente(integer)
  OWNER TO postgres;
